scalar Date

directive @superuser on FIELD_DEFINITION

type Query {
  me: User
  users(filter: UserFilter): [User]!
  items(filter: ItemFilter): [Item]!
}

type Mutation {
  login(input: LoginInput!): TokenPayload
  createUser(input: UserInput!): UserPayload
  updateUser(input: UserInput!): UserPayload
  createItem(input: ItemInput!): ItemPayload
  updateItem(input: ItemUpdateInput!): ItemPayload
}

"""
**User** type description
"""
type User {
  dbid: Int
  name: String!
  email: String @superuser
  is_active: Boolean
  is_superuser: Boolean @superuser
  items: [Item]
}

input UserFilter {
  name_like: String
  email_is: String
  dbid_is: Int
}

"""
**Item** type description
"""
type Item {
  dbid: Int!
  title: String
  description: String
  posted_on: Date
  owner: User
}

input ItemFilter {
  dbid_is: Int
  title_like: String
  description_like: String
}

"""
**User** input type description
"""
input UserInput {
  name: String!
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

type UserPayload {
  status: Boolean!
  error: String
  user: User
}

type TokenPayload {
  status: Boolean!
  error: String
  token: String
}

"""
**Item** input type description
"""
input ItemInput {
  owner_dbid: Int!
  title: String!
  description: String
}

"""
**Item** update input type description
"""
input ItemUpdateInput {
  dbid: Int!
  title: String
  description: String
}

type ItemPayload {
  status: Boolean!
  error: String
  item: Item
}
