scalar Date

directive @superuser on FIELD_DEFINITION

type Query {
  me: Me!
  items(filter: ItemsFilterInput): [Item!]!
}

type Mutation {
  createMe(input: CreateMeInput): LoginPayload!
  updateMe(input: UpdateMeInput): Me!
  login(input: LoginInput): LoginPayload!
  createItem(input: CreateItemInput): Item!
  updateItem(id: ID!, input: UpdateItemInput): Item!
  deleteUser(id: ID!): Boolean! @superuser
  deleteItem(id: ID!): Boolean! @superuser
}

input UpdateItemInput {
  itemId: ID!
  title: String
  description: String
  postedOn: Date
}

input UpdateMeInput {
  name: String
  isActive: Boolean
}

input CreateItemInput {
  postedOn: Date!
  title: String!
  description: String
}

type LoginPayload {
  token: String!
  me: Me!
}

input CreateMeInput {
  name: String!
  email: String!
  password: String!
  isActive: Boolean
}

input LoginInput {
  email: String!
  password: String!
}

input ItemsFilterInput {
  titleLike: String
  descriptionLike: String
}

type Me {
  id: ID!
  name: String!
  email: String!
  isActive: Boolean!
  isSuperuser: Boolean @superuser
  items: [Item!]!
}

type User {
  id: ID!
  name: String!
  isActive: Boolean!
  items: [Item!]!
}

type Item {
  id: ID!
  title: String!
  description: String
  postedOn: Date!
  owner: User!
}
